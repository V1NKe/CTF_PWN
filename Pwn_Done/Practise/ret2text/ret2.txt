
ret2text:     file format elf32-i386


Disassembly of section .init:

0804841c <_init>:
 804841c:	53                   	push   %ebx
 804841d:	83 ec 08             	sub    $0x8,%esp
 8048420:	e8 0b 01 00 00       	call   8048530 <__x86.get_pc_thunk.bx>
 8048425:	81 c3 db 1b 00 00    	add    $0x1bdb,%ebx
 804842b:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048431:	85 c0                	test   %eax,%eax
 8048433:	74 05                	je     804843a <_init+0x1e>
 8048435:	e8 66 00 00 00       	call   80484a0 <__gmon_start__@plt>
 804843a:	83 c4 08             	add    $0x8,%esp
 804843d:	5b                   	pop    %ebx
 804843e:	c3                   	ret    

Disassembly of section .plt:

08048440 <printf@plt-0x10>:
 8048440:	ff 35 04 a0 04 08    	pushl  0x804a004
 8048446:	ff 25 08 a0 04 08    	jmp    *0x804a008
 804844c:	00 00                	add    %al,(%eax)
	...

08048450 <printf@plt>:
 8048450:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 8048456:	68 00 00 00 00       	push   $0x0
 804845b:	e9 e0 ff ff ff       	jmp    8048440 <_init+0x24>

08048460 <gets@plt>:
 8048460:	ff 25 10 a0 04 08    	jmp    *0x804a010
 8048466:	68 08 00 00 00       	push   $0x8
 804846b:	e9 d0 ff ff ff       	jmp    8048440 <_init+0x24>

08048470 <time@plt>:
 8048470:	ff 25 14 a0 04 08    	jmp    *0x804a014
 8048476:	68 10 00 00 00       	push   $0x10
 804847b:	e9 c0 ff ff ff       	jmp    8048440 <_init+0x24>

08048480 <puts@plt>:
 8048480:	ff 25 18 a0 04 08    	jmp    *0x804a018
 8048486:	68 18 00 00 00       	push   $0x18
 804848b:	e9 b0 ff ff ff       	jmp    8048440 <_init+0x24>

08048490 <system@plt>:
 8048490:	ff 25 1c a0 04 08    	jmp    *0x804a01c
 8048496:	68 20 00 00 00       	push   $0x20
 804849b:	e9 a0 ff ff ff       	jmp    8048440 <_init+0x24>

080484a0 <__gmon_start__@plt>:
 80484a0:	ff 25 20 a0 04 08    	jmp    *0x804a020
 80484a6:	68 28 00 00 00       	push   $0x28
 80484ab:	e9 90 ff ff ff       	jmp    8048440 <_init+0x24>

080484b0 <srand@plt>:
 80484b0:	ff 25 24 a0 04 08    	jmp    *0x804a024
 80484b6:	68 30 00 00 00       	push   $0x30
 80484bb:	e9 80 ff ff ff       	jmp    8048440 <_init+0x24>

080484c0 <__libc_start_main@plt>:
 80484c0:	ff 25 28 a0 04 08    	jmp    *0x804a028
 80484c6:	68 38 00 00 00       	push   $0x38
 80484cb:	e9 70 ff ff ff       	jmp    8048440 <_init+0x24>

080484d0 <setvbuf@plt>:
 80484d0:	ff 25 2c a0 04 08    	jmp    *0x804a02c
 80484d6:	68 40 00 00 00       	push   $0x40
 80484db:	e9 60 ff ff ff       	jmp    8048440 <_init+0x24>

080484e0 <rand@plt>:
 80484e0:	ff 25 30 a0 04 08    	jmp    *0x804a030
 80484e6:	68 48 00 00 00       	push   $0x48
 80484eb:	e9 50 ff ff ff       	jmp    8048440 <_init+0x24>

080484f0 <__isoc99_scanf@plt>:
 80484f0:	ff 25 34 a0 04 08    	jmp    *0x804a034
 80484f6:	68 50 00 00 00       	push   $0x50
 80484fb:	e9 40 ff ff ff       	jmp    8048440 <_init+0x24>

Disassembly of section .text:

08048500 <_start>:
 8048500:	31 ed                	xor    %ebp,%ebp
 8048502:	5e                   	pop    %esi
 8048503:	89 e1                	mov    %esp,%ecx
 8048505:	83 e4 f0             	and    $0xfffffff0,%esp
 8048508:	50                   	push   %eax
 8048509:	54                   	push   %esp
 804850a:	52                   	push   %edx
 804850b:	68 40 87 04 08       	push   $0x8048740
 8048510:	68 d0 86 04 08       	push   $0x80486d0
 8048515:	51                   	push   %ecx
 8048516:	56                   	push   %esi
 8048517:	68 48 86 04 08       	push   $0x8048648
 804851c:	e8 9f ff ff ff       	call   80484c0 <__libc_start_main@plt>
 8048521:	f4                   	hlt    
 8048522:	66 90                	xchg   %ax,%ax
 8048524:	66 90                	xchg   %ax,%ax
 8048526:	66 90                	xchg   %ax,%ax
 8048528:	66 90                	xchg   %ax,%ax
 804852a:	66 90                	xchg   %ax,%ax
 804852c:	66 90                	xchg   %ax,%ax
 804852e:	66 90                	xchg   %ax,%ax

08048530 <__x86.get_pc_thunk.bx>:
 8048530:	8b 1c 24             	mov    (%esp),%ebx
 8048533:	c3                   	ret    
 8048534:	66 90                	xchg   %ax,%ax
 8048536:	66 90                	xchg   %ax,%ax
 8048538:	66 90                	xchg   %ax,%ax
 804853a:	66 90                	xchg   %ax,%ax
 804853c:	66 90                	xchg   %ax,%ax
 804853e:	66 90                	xchg   %ax,%ax

08048540 <deregister_tm_clones>:
 8048540:	b8 43 a0 04 08       	mov    $0x804a043,%eax
 8048545:	2d 40 a0 04 08       	sub    $0x804a040,%eax
 804854a:	83 f8 06             	cmp    $0x6,%eax
 804854d:	77 01                	ja     8048550 <deregister_tm_clones+0x10>
 804854f:	c3                   	ret    
 8048550:	b8 00 00 00 00       	mov    $0x0,%eax
 8048555:	85 c0                	test   %eax,%eax
 8048557:	74 f6                	je     804854f <deregister_tm_clones+0xf>
 8048559:	55                   	push   %ebp
 804855a:	89 e5                	mov    %esp,%ebp
 804855c:	83 ec 18             	sub    $0x18,%esp
 804855f:	c7 04 24 40 a0 04 08 	movl   $0x804a040,(%esp)
 8048566:	ff d0                	call   *%eax
 8048568:	c9                   	leave  
 8048569:	c3                   	ret    
 804856a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

08048570 <register_tm_clones>:
 8048570:	b8 40 a0 04 08       	mov    $0x804a040,%eax
 8048575:	2d 40 a0 04 08       	sub    $0x804a040,%eax
 804857a:	c1 f8 02             	sar    $0x2,%eax
 804857d:	89 c2                	mov    %eax,%edx
 804857f:	c1 ea 1f             	shr    $0x1f,%edx
 8048582:	01 d0                	add    %edx,%eax
 8048584:	d1 f8                	sar    %eax
 8048586:	75 01                	jne    8048589 <register_tm_clones+0x19>
 8048588:	c3                   	ret    
 8048589:	ba 00 00 00 00       	mov    $0x0,%edx
 804858e:	85 d2                	test   %edx,%edx
 8048590:	74 f6                	je     8048588 <register_tm_clones+0x18>
 8048592:	55                   	push   %ebp
 8048593:	89 e5                	mov    %esp,%ebp
 8048595:	83 ec 18             	sub    $0x18,%esp
 8048598:	89 44 24 04          	mov    %eax,0x4(%esp)
 804859c:	c7 04 24 40 a0 04 08 	movl   $0x804a040,(%esp)
 80485a3:	ff d2                	call   *%edx
 80485a5:	c9                   	leave  
 80485a6:	c3                   	ret    
 80485a7:	89 f6                	mov    %esi,%esi
 80485a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080485b0 <__do_global_dtors_aux>:
 80485b0:	80 3d 64 a0 04 08 00 	cmpb   $0x0,0x804a064
 80485b7:	75 13                	jne    80485cc <__do_global_dtors_aux+0x1c>
 80485b9:	55                   	push   %ebp
 80485ba:	89 e5                	mov    %esp,%ebp
 80485bc:	83 ec 08             	sub    $0x8,%esp
 80485bf:	e8 7c ff ff ff       	call   8048540 <deregister_tm_clones>
 80485c4:	c6 05 64 a0 04 08 01 	movb   $0x1,0x804a064
 80485cb:	c9                   	leave  
 80485cc:	f3 c3                	repz ret 
 80485ce:	66 90                	xchg   %ax,%ax

080485d0 <frame_dummy>:
 80485d0:	a1 10 9f 04 08       	mov    0x8049f10,%eax
 80485d5:	85 c0                	test   %eax,%eax
 80485d7:	74 1f                	je     80485f8 <frame_dummy+0x28>
 80485d9:	b8 00 00 00 00       	mov    $0x0,%eax
 80485de:	85 c0                	test   %eax,%eax
 80485e0:	74 16                	je     80485f8 <frame_dummy+0x28>
 80485e2:	55                   	push   %ebp
 80485e3:	89 e5                	mov    %esp,%ebp
 80485e5:	83 ec 18             	sub    $0x18,%esp
 80485e8:	c7 04 24 10 9f 04 08 	movl   $0x8049f10,(%esp)
 80485ef:	ff d0                	call   *%eax
 80485f1:	c9                   	leave  
 80485f2:	e9 79 ff ff ff       	jmp    8048570 <register_tm_clones>
 80485f7:	90                   	nop
 80485f8:	e9 73 ff ff ff       	jmp    8048570 <register_tm_clones>

080485fd <secure>:
 80485fd:	55                   	push   %ebp
 80485fe:	89 e5                	mov    %esp,%ebp
 8048600:	83 ec 28             	sub    $0x28,%esp
 8048603:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 804860a:	e8 61 fe ff ff       	call   8048470 <time@plt>
 804860f:	89 04 24             	mov    %eax,(%esp)
 8048612:	e8 99 fe ff ff       	call   80484b0 <srand@plt>
 8048617:	e8 c4 fe ff ff       	call   80484e0 <rand@plt>
 804861c:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804861f:	8d 45 f0             	lea    -0x10(%ebp),%eax
 8048622:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048626:	c7 04 24 60 87 04 08 	movl   $0x8048760,(%esp)
 804862d:	e8 be fe ff ff       	call   80484f0 <__isoc99_scanf@plt>
 8048632:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8048635:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 8048638:	75 0c                	jne    8048646 <secure+0x49>
 804863a:	c7 04 24 63 87 04 08 	movl   $0x8048763,(%esp)
 8048641:	e8 4a fe ff ff       	call   8048490 <system@plt>
 8048646:	c9                   	leave  
 8048647:	c3                   	ret    

08048648 <main>:
 8048648:	55                   	push   %ebp
 8048649:	89 e5                	mov    %esp,%ebp
 804864b:	83 e4 f0             	and    $0xfffffff0,%esp
 804864e:	83 c4 80             	add    $0xffffff80,%esp
 8048651:	a1 60 a0 04 08       	mov    0x804a060,%eax
 8048656:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804865d:	00 
 804865e:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)
 8048665:	00 
 8048666:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 804866d:	00 
 804866e:	89 04 24             	mov    %eax,(%esp)
 8048671:	e8 5a fe ff ff       	call   80484d0 <setvbuf@plt>
 8048676:	a1 40 a0 04 08       	mov    0x804a040,%eax
 804867b:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 8048682:	00 
 8048683:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
 804868a:	00 
 804868b:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 8048692:	00 
 8048693:	89 04 24             	mov    %eax,(%esp)
 8048696:	e8 35 fe ff ff       	call   80484d0 <setvbuf@plt>
 804869b:	c7 04 24 6c 87 04 08 	movl   $0x804876c,(%esp)
 80486a2:	e8 d9 fd ff ff       	call   8048480 <puts@plt>
 80486a7:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 80486ab:	89 04 24             	mov    %eax,(%esp)
 80486ae:	e8 ad fd ff ff       	call   8048460 <gets@plt>
 80486b3:	c7 04 24 a4 87 04 08 	movl   $0x80487a4,(%esp)
 80486ba:	e8 91 fd ff ff       	call   8048450 <printf@plt>
 80486bf:	b8 00 00 00 00       	mov    $0x0,%eax
 80486c4:	c9                   	leave  
 80486c5:	c3                   	ret    
 80486c6:	66 90                	xchg   %ax,%ax
 80486c8:	66 90                	xchg   %ax,%ax
 80486ca:	66 90                	xchg   %ax,%ax
 80486cc:	66 90                	xchg   %ax,%ax
 80486ce:	66 90                	xchg   %ax,%ax

080486d0 <__libc_csu_init>:
 80486d0:	55                   	push   %ebp
 80486d1:	57                   	push   %edi
 80486d2:	31 ff                	xor    %edi,%edi
 80486d4:	56                   	push   %esi
 80486d5:	53                   	push   %ebx
 80486d6:	e8 55 fe ff ff       	call   8048530 <__x86.get_pc_thunk.bx>
 80486db:	81 c3 25 19 00 00    	add    $0x1925,%ebx
 80486e1:	83 ec 1c             	sub    $0x1c,%esp
 80486e4:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 80486e8:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 80486ee:	e8 29 fd ff ff       	call   804841c <_init>
 80486f3:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 80486f9:	29 c6                	sub    %eax,%esi
 80486fb:	c1 fe 02             	sar    $0x2,%esi
 80486fe:	85 f6                	test   %esi,%esi
 8048700:	74 27                	je     8048729 <__libc_csu_init+0x59>
 8048702:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048708:	8b 44 24 38          	mov    0x38(%esp),%eax
 804870c:	89 2c 24             	mov    %ebp,(%esp)
 804870f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048713:	8b 44 24 34          	mov    0x34(%esp),%eax
 8048717:	89 44 24 04          	mov    %eax,0x4(%esp)
 804871b:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 8048722:	83 c7 01             	add    $0x1,%edi
 8048725:	39 f7                	cmp    %esi,%edi
 8048727:	75 df                	jne    8048708 <__libc_csu_init+0x38>
 8048729:	83 c4 1c             	add    $0x1c,%esp
 804872c:	5b                   	pop    %ebx
 804872d:	5e                   	pop    %esi
 804872e:	5f                   	pop    %edi
 804872f:	5d                   	pop    %ebp
 8048730:	c3                   	ret    
 8048731:	eb 0d                	jmp    8048740 <__libc_csu_fini>
 8048733:	90                   	nop
 8048734:	90                   	nop
 8048735:	90                   	nop
 8048736:	90                   	nop
 8048737:	90                   	nop
 8048738:	90                   	nop
 8048739:	90                   	nop
 804873a:	90                   	nop
 804873b:	90                   	nop
 804873c:	90                   	nop
 804873d:	90                   	nop
 804873e:	90                   	nop
 804873f:	90                   	nop

08048740 <__libc_csu_fini>:
 8048740:	f3 c3                	repz ret 

Disassembly of section .fini:

08048744 <_fini>:
 8048744:	53                   	push   %ebx
 8048745:	83 ec 08             	sub    $0x8,%esp
 8048748:	e8 e3 fd ff ff       	call   8048530 <__x86.get_pc_thunk.bx>
 804874d:	81 c3 b3 18 00 00    	add    $0x18b3,%ebx
 8048753:	83 c4 08             	add    $0x8,%esp
 8048756:	5b                   	pop    %ebx
 8048757:	c3                   	ret    
