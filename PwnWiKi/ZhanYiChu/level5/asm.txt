
level5:     file format elf64-x86-64


Disassembly of section .init:

0000000000400400 <_init>:
  400400:	48 83 ec 08          	sub    $0x8,%rsp
  400404:	48 8b 05 ed 0b 20 00 	mov    0x200bed(%rip),%rax        # 600ff8 <_DYNAMIC+0x1d0>
  40040b:	48 85 c0             	test   %rax,%rax
  40040e:	74 05                	je     400415 <_init+0x15>
  400410:	e8 4b 00 00 00       	callq  400460 <__libc_start_main@plt+0x10>
  400415:	48 83 c4 08          	add    $0x8,%rsp
  400419:	c3                   	retq   

Disassembly of section .plt:

0000000000400420 <write@plt-0x10>:
  400420:	ff 35 e2 0b 20 00    	pushq  0x200be2(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400426:	ff 25 e4 0b 20 00    	jmpq   *0x200be4(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40042c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400430 <write@plt>:
  400430:	ff 25 e2 0b 20 00    	jmpq   *0x200be2(%rip)        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400436:	68 00 00 00 00       	pushq  $0x0
  40043b:	e9 e0 ff ff ff       	jmpq   400420 <_init+0x20>

0000000000400440 <read@plt>:
  400440:	ff 25 da 0b 20 00    	jmpq   *0x200bda(%rip)        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400446:	68 01 00 00 00       	pushq  $0x1
  40044b:	e9 d0 ff ff ff       	jmpq   400420 <_init+0x20>

0000000000400450 <__libc_start_main@plt>:
  400450:	ff 25 d2 0b 20 00    	jmpq   *0x200bd2(%rip)        # 601028 <_GLOBAL_OFFSET_TABLE_+0x28>
  400456:	68 02 00 00 00       	pushq  $0x2
  40045b:	e9 c0 ff ff ff       	jmpq   400420 <_init+0x20>

Disassembly of section .plt.got:

0000000000400460 <.plt.got>:
  400460:	ff 25 92 0b 20 00    	jmpq   *0x200b92(%rip)        # 600ff8 <_DYNAMIC+0x1d0>
  400466:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000400470 <_start>:
  400470:	31 ed                	xor    %ebp,%ebp
  400472:	49 89 d1             	mov    %rdx,%r9
  400475:	5e                   	pop    %rsi
  400476:	48 89 e2             	mov    %rsp,%rdx
  400479:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40047d:	50                   	push   %rax
  40047e:	54                   	push   %rsp
  40047f:	49 c7 c0 30 06 40 00 	mov    $0x400630,%r8
  400486:	48 c7 c1 c0 05 40 00 	mov    $0x4005c0,%rcx
  40048d:	48 c7 c7 87 05 40 00 	mov    $0x400587,%rdi
  400494:	e8 b7 ff ff ff       	callq  400450 <__libc_start_main@plt>
  400499:	f4                   	hlt    
  40049a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004004a0 <deregister_tm_clones>:
  4004a0:	b8 47 10 60 00       	mov    $0x601047,%eax
  4004a5:	55                   	push   %rbp
  4004a6:	48 2d 40 10 60 00    	sub    $0x601040,%rax
  4004ac:	48 83 f8 0e          	cmp    $0xe,%rax
  4004b0:	48 89 e5             	mov    %rsp,%rbp
  4004b3:	76 1b                	jbe    4004d0 <deregister_tm_clones+0x30>
  4004b5:	b8 00 00 00 00       	mov    $0x0,%eax
  4004ba:	48 85 c0             	test   %rax,%rax
  4004bd:	74 11                	je     4004d0 <deregister_tm_clones+0x30>
  4004bf:	5d                   	pop    %rbp
  4004c0:	bf 40 10 60 00       	mov    $0x601040,%edi
  4004c5:	ff e0                	jmpq   *%rax
  4004c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4004ce:	00 00 
  4004d0:	5d                   	pop    %rbp
  4004d1:	c3                   	retq   
  4004d2:	0f 1f 40 00          	nopl   0x0(%rax)
  4004d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4004dd:	00 00 00 

00000000004004e0 <register_tm_clones>:
  4004e0:	be 40 10 60 00       	mov    $0x601040,%esi
  4004e5:	55                   	push   %rbp
  4004e6:	48 81 ee 40 10 60 00 	sub    $0x601040,%rsi
  4004ed:	48 c1 fe 03          	sar    $0x3,%rsi
  4004f1:	48 89 e5             	mov    %rsp,%rbp
  4004f4:	48 89 f0             	mov    %rsi,%rax
  4004f7:	48 c1 e8 3f          	shr    $0x3f,%rax
  4004fb:	48 01 c6             	add    %rax,%rsi
  4004fe:	48 d1 fe             	sar    %rsi
  400501:	74 15                	je     400518 <register_tm_clones+0x38>
  400503:	b8 00 00 00 00       	mov    $0x0,%eax
  400508:	48 85 c0             	test   %rax,%rax
  40050b:	74 0b                	je     400518 <register_tm_clones+0x38>
  40050d:	5d                   	pop    %rbp
  40050e:	bf 40 10 60 00       	mov    $0x601040,%edi
  400513:	ff e0                	jmpq   *%rax
  400515:	0f 1f 00             	nopl   (%rax)
  400518:	5d                   	pop    %rbp
  400519:	c3                   	retq   
  40051a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400520 <__do_global_dtors_aux>:
  400520:	80 3d 19 0b 20 00 00 	cmpb   $0x0,0x200b19(%rip)        # 601040 <__TMC_END__>
  400527:	75 11                	jne    40053a <__do_global_dtors_aux+0x1a>
  400529:	55                   	push   %rbp
  40052a:	48 89 e5             	mov    %rsp,%rbp
  40052d:	e8 6e ff ff ff       	callq  4004a0 <deregister_tm_clones>
  400532:	5d                   	pop    %rbp
  400533:	c6 05 06 0b 20 00 01 	movb   $0x1,0x200b06(%rip)        # 601040 <__TMC_END__>
  40053a:	f3 c3                	repz retq 
  40053c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400540 <frame_dummy>:
  400540:	bf 20 0e 60 00       	mov    $0x600e20,%edi
  400545:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  400549:	75 05                	jne    400550 <frame_dummy+0x10>
  40054b:	eb 93                	jmp    4004e0 <register_tm_clones>
  40054d:	0f 1f 00             	nopl   (%rax)
  400550:	b8 00 00 00 00       	mov    $0x0,%eax
  400555:	48 85 c0             	test   %rax,%rax
  400558:	74 f1                	je     40054b <frame_dummy+0xb>
  40055a:	55                   	push   %rbp
  40055b:	48 89 e5             	mov    %rsp,%rbp
  40055e:	ff d0                	callq  *%rax
  400560:	5d                   	pop    %rbp
  400561:	e9 7a ff ff ff       	jmpq   4004e0 <register_tm_clones>

0000000000400566 <vulnerable_function>:
  400566:	55                   	push   %rbp
  400567:	48 89 e5             	mov    %rsp,%rbp
  40056a:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
  40056e:	48 8d 45 80          	lea    -0x80(%rbp),%rax
  400572:	ba 00 02 00 00       	mov    $0x200,%edx
  400577:	48 89 c6             	mov    %rax,%rsi
  40057a:	bf 00 00 00 00       	mov    $0x0,%edi
  40057f:	e8 bc fe ff ff       	callq  400440 <read@plt>
  400584:	90                   	nop
  400585:	c9                   	leaveq 
  400586:	c3                   	retq   

0000000000400587 <main>:
  400587:	55                   	push   %rbp
  400588:	48 89 e5             	mov    %rsp,%rbp
  40058b:	48 83 ec 10          	sub    $0x10,%rsp
  40058f:	89 7d fc             	mov    %edi,-0x4(%rbp)
  400592:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  400596:	ba 0d 00 00 00       	mov    $0xd,%edx
  40059b:	be 44 06 40 00       	mov    $0x400644,%esi
  4005a0:	bf 01 00 00 00       	mov    $0x1,%edi
  4005a5:	e8 86 fe ff ff       	callq  400430 <write@plt>
  4005aa:	b8 00 00 00 00       	mov    $0x0,%eax
  4005af:	e8 b2 ff ff ff       	callq  400566 <vulnerable_function>
  4005b4:	b8 00 00 00 00       	mov    $0x0,%eax
  4005b9:	c9                   	leaveq 
  4005ba:	c3                   	retq   
  4005bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004005c0 <__libc_csu_init>:
  4005c0:	41 57                	push   %r15
  4005c2:	41 56                	push   %r14
  4005c4:	41 89 ff             	mov    %edi,%r15d
  4005c7:	41 55                	push   %r13
  4005c9:	41 54                	push   %r12
  4005cb:	4c 8d 25 3e 08 20 00 	lea    0x20083e(%rip),%r12        # 600e10 <__frame_dummy_init_array_entry>
  4005d2:	55                   	push   %rbp
  4005d3:	48 8d 2d 3e 08 20 00 	lea    0x20083e(%rip),%rbp        # 600e18 <__init_array_end>
  4005da:	53                   	push   %rbx
  4005db:	49 89 f6             	mov    %rsi,%r14
  4005de:	49 89 d5             	mov    %rdx,%r13
  4005e1:	4c 29 e5             	sub    %r12,%rbp
  4005e4:	48 83 ec 08          	sub    $0x8,%rsp
  4005e8:	48 c1 fd 03          	sar    $0x3,%rbp
  4005ec:	e8 0f fe ff ff       	callq  400400 <_init>
  4005f1:	48 85 ed             	test   %rbp,%rbp
  4005f4:	74 20                	je     400616 <__libc_csu_init+0x56>
  4005f6:	31 db                	xor    %ebx,%ebx
  4005f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4005ff:	00 
  400600:	4c 89 ea             	mov    %r13,%rdx
  400603:	4c 89 f6             	mov    %r14,%rsi
  400606:	44 89 ff             	mov    %r15d,%edi
  400609:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40060d:	48 83 c3 01          	add    $0x1,%rbx
  400611:	48 39 eb             	cmp    %rbp,%rbx
  400614:	75 ea                	jne    400600 <__libc_csu_init+0x40>
  400616:	48 83 c4 08          	add    $0x8,%rsp
  40061a:	5b                   	pop    %rbx
  40061b:	5d                   	pop    %rbp
  40061c:	41 5c                	pop    %r12
  40061e:	41 5d                	pop    %r13
  400620:	41 5e                	pop    %r14
  400622:	41 5f                	pop    %r15
  400624:	c3                   	retq   
  400625:	90                   	nop
  400626:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40062d:	00 00 00 

0000000000400630 <__libc_csu_fini>:
  400630:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000400634 <_fini>:
  400634:	48 83 ec 08          	sub    $0x8,%rsp
  400638:	48 83 c4 08          	add    $0x8,%rsp
  40063c:	c3                   	retq   
